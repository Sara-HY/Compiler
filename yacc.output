Terminals unused in grammar

   RELOP


State 145 conflicts: 1 shift/reduce
State 148 conflicts: 15 shift/reduce


Grammar

    0 $accept: Program0 $end

    1 Program0: Program

    2 Program: ExtDefList

    3 ExtDefList: /* empty */
    4           | ExtDef ExtDefList

    5 ExtDef: Specifier ExtDecList ';'
    6       | Specifier ';'
    7       | Specifier FunDec ';'
    8       | Specifier FunDec CompSt
    9       | Specifier error ';'
   10       | error ';'

   11 ExtDecList: VarDec
   12           | VarDec ',' ExtDecList

   13 Specifier: TYPE
   14          | StructSpecifier

   15 TYPE: INT
   16     | FLOAT

   17 StructSpecifier: STRUCT OptTag '{' DefList '}'
   18                | STRUCT Tag

   19 OptTag: /* empty */
   20       | ID

   21 Tag: ID

   22 VarDec: ID
   23       | VarDec '[' INT_NUM ']'
   24       | VarDec '[' error ']'

   25 FunDec: ID '(' VarList ')'
   26       | ID '(' error ')'
   27       | ID '(' ')'
   28       | ID error ')'

   29 VarList: ParamDec ',' VarList
   30        | ParamDec
   31        | error ',' VarList

   32 ParamDec: Specifier VarDec

   33 CompSt: '{' DefList StmtList '}'
   34       | error '}'

   35 StmtList: /* empty */
   36         | Stmt StmtList

   37 Stmt: Exp ';'
   38     | error ';'
   39     | CompSt
   40     | RETURN Exp ';'
   41     | RETURN error ';'
   42     | IF '(' Exp ')' Stmt
   43     | IF '(' error ')' Stmt
   44     | IF error ')' Stmt
   45     | IF '(' Exp ')' Stmt ELSE Stmt
   46     | IF '(' Exp ')' error ELSE Stmt
   47     | IF '(' error ')' Stmt ELSE Stmt
   48     | IF error ')' Stmt ELSE Stmt
   49     | WHILE '(' Exp ')' Stmt
   50     | WHILE '(' error ')' Stmt
   51     | WHILE error ')' Stmt

   52 DefList: /* empty */
   53        | Def DefList

   54 Def: Specifier DecList ';'
   55    | Specifier error ';'

   56 DecList: Dec
   57        | Dec ',' DecList
   58        | error ',' DecList

   59 Dec: VarDec
   60    | VarDec '=' Exp
   61    | error '=' Exp

   62 Exp: Exp '=' Exp
   63    | Exp And Exp
   64    | Exp Or Exp
   65    | Exp Relop Exp
   66    | Exp '+' Exp
   67    | Exp '-' Exp
   68    | Exp '*' Exp
   69    | Exp '/' Exp
   70    | '(' Exp ')'
   71    | error ')'
   72    | '-' Exp
   73    | '!' Exp
   74    | ID '(' Args ')'
   75    | ID '(' ')'
   76    | ID error ')'
   77    | Exp '[' Exp ']'
   78    | Exp '[' error
   79    | Exp '.' ID
   80    | ID
   81    | INT_NUM
   82    | FLOAT_NUM

   83 Relop: Equal
   84      | Unequal
   85      | '<'
   86      | LE
   87      | '>'
   88      | GE

   89 Args: Exp ',' Args
   90     | error ',' Args
   91     | Exp


Terminals, with rules where they appear

$end (0) 0
'!' (33) 73
'(' (40) 25 26 27 42 43 45 46 47 49 50 70 74 75
')' (41) 25 26 27 28 42 43 44 45 46 47 48 49 50 51 70 71 74 75 76
'*' (42) 68
'+' (43) 66
',' (44) 12 29 31 57 58 89 90
'-' (45) 67 72
'.' (46) 79
'/' (47) 69
';' (59) 5 6 7 9 10 37 38 40 41 54 55
'<' (60) 85
'=' (61) 60 61 62
'>' (62) 87
'[' (91) 23 24 77 78
']' (93) 23 24 77
'{' (123) 17 33
'}' (125) 17 33 34
error (256) 9 10 24 26 28 31 34 38 41 43 44 46 47 48 50 51 55 58 61
    71 76 78 90
INT_NUM (258) 23 81
FLOAT_NUM (259) 82
ID (260) 20 21 22 25 26 27 28 74 75 76 79 80
INT (261) 15
FLOAT (262) 16
STRUCT (263) 17 18
RETURN (264) 40 41
IF (265) 42 43 44 45 46 47 48
ELSE (266) 45 46 47 48
WHILE (267) 49 50 51
GE (268) 88
LE (269) 86
Equal (270) 83
Unequal (271) 84
And (272) 63
Or (273) 64
RELOP (274)
UMINUS (275)
LOWER_THAN_ELSE (276)


Nonterminals, with rules where they appear

$accept (39)
    on left: 0
Program0 (40)
    on left: 1, on right: 0
Program (41)
    on left: 2, on right: 1
ExtDefList (42)
    on left: 3 4, on right: 2 4
ExtDef (43)
    on left: 5 6 7 8 9 10, on right: 4
ExtDecList (44)
    on left: 11 12, on right: 5 12
Specifier (45)
    on left: 13 14, on right: 5 6 7 8 9 32 54 55
TYPE (46)
    on left: 15 16, on right: 13
StructSpecifier (47)
    on left: 17 18, on right: 14
OptTag (48)
    on left: 19 20, on right: 17
Tag (49)
    on left: 21, on right: 18
VarDec (50)
    on left: 22 23 24, on right: 11 12 23 24 32 59 60
FunDec (51)
    on left: 25 26 27 28, on right: 7 8
VarList (52)
    on left: 29 30 31, on right: 25 29 31
ParamDec (53)
    on left: 32, on right: 29 30
CompSt (54)
    on left: 33 34, on right: 8 39
StmtList (55)
    on left: 35 36, on right: 33 36
Stmt (56)
    on left: 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51, on right:
    36 42 43 44 45 46 47 48 49 50 51
DefList (57)
    on left: 52 53, on right: 17 33 53
Def (58)
    on left: 54 55, on right: 53
DecList (59)
    on left: 56 57 58, on right: 54 57 58
Dec (60)
    on left: 59 60 61, on right: 56 57
Exp (61)
    on left: 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79
    80 81 82, on right: 37 40 42 45 46 49 60 61 62 63 64 65 66 67 68
    69 70 72 73 77 78 79 89 91
Relop (62)
    on left: 83 84 85 86 87 88, on right: 65
Args (63)
    on left: 89 90 91, on right: 74 89 90


state 0

    0 $accept: . Program0 $end

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 4

    $end  reduce using rule 3 (ExtDefList)

    Program0         go to state 5
    Program          go to state 6
    ExtDefList       go to state 7
    ExtDef           go to state 8
    Specifier        go to state 9
    TYPE             go to state 10
    StructSpecifier  go to state 11


state 1

   10 ExtDef: error . ';'

    ';'  shift, and go to state 12


state 2

   15 TYPE: INT .

    $default  reduce using rule 15 (TYPE)


state 3

   16 TYPE: FLOAT .

    $default  reduce using rule 16 (TYPE)


state 4

   17 StructSpecifier: STRUCT . OptTag '{' DefList '}'
   18                | STRUCT . Tag

    ID  shift, and go to state 13

    $default  reduce using rule 19 (OptTag)

    OptTag  go to state 14
    Tag     go to state 15


state 5

    0 $accept: Program0 . $end

    $end  shift, and go to state 16


state 6

    1 Program0: Program .

    $default  reduce using rule 1 (Program0)


state 7

    2 Program: ExtDefList .

    $default  reduce using rule 2 (Program)


state 8

    4 ExtDefList: ExtDef . ExtDefList

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 4

    $end  reduce using rule 3 (ExtDefList)

    ExtDefList       go to state 17
    ExtDef           go to state 8
    Specifier        go to state 9
    TYPE             go to state 10
    StructSpecifier  go to state 11


state 9

    5 ExtDef: Specifier . ExtDecList ';'
    6       | Specifier . ';'
    7       | Specifier . FunDec ';'
    8       | Specifier . FunDec CompSt
    9       | Specifier . error ';'

    error  shift, and go to state 18
    ID     shift, and go to state 19
    ';'    shift, and go to state 20

    ExtDecList  go to state 21
    VarDec      go to state 22
    FunDec      go to state 23


state 10

   13 Specifier: TYPE .

    $default  reduce using rule 13 (Specifier)


state 11

   14 Specifier: StructSpecifier .

    $default  reduce using rule 14 (Specifier)


state 12

   10 ExtDef: error ';' .

    $default  reduce using rule 10 (ExtDef)


state 13

   20 OptTag: ID .
   21 Tag: ID .

    '{'       reduce using rule 20 (OptTag)
    $default  reduce using rule 21 (Tag)


state 14

   17 StructSpecifier: STRUCT OptTag . '{' DefList '}'

    '{'  shift, and go to state 24


state 15

   18 StructSpecifier: STRUCT Tag .

    $default  reduce using rule 18 (StructSpecifier)


state 16

    0 $accept: Program0 $end .

    $default  accept


state 17

    4 ExtDefList: ExtDef ExtDefList .

    $default  reduce using rule 4 (ExtDefList)


state 18

    9 ExtDef: Specifier error . ';'

    ';'  shift, and go to state 25


state 19

   22 VarDec: ID .
   25 FunDec: ID . '(' VarList ')'
   26       | ID . '(' error ')'
   27       | ID . '(' ')'
   28       | ID . error ')'

    error  shift, and go to state 26
    '('    shift, and go to state 27

    '['  reduce using rule 22 (VarDec)
    ','  reduce using rule 22 (VarDec)
    ';'  reduce using rule 22 (VarDec)


state 20

    6 ExtDef: Specifier ';' .

    $default  reduce using rule 6 (ExtDef)


state 21

    5 ExtDef: Specifier ExtDecList . ';'

    ';'  shift, and go to state 28


state 22

   11 ExtDecList: VarDec .
   12           | VarDec . ',' ExtDecList
   23 VarDec: VarDec . '[' INT_NUM ']'
   24       | VarDec . '[' error ']'

    '['  shift, and go to state 29
    ','  shift, and go to state 30

    $default  reduce using rule 11 (ExtDecList)


state 23

    7 ExtDef: Specifier FunDec . ';'
    8       | Specifier FunDec . CompSt

    error  shift, and go to state 31
    ';'    shift, and go to state 32
    '{'    shift, and go to state 33

    CompSt  go to state 34


state 24

   17 StructSpecifier: STRUCT OptTag '{' . DefList '}'

    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 4

    $default  reduce using rule 52 (DefList)

    Specifier        go to state 35
    TYPE             go to state 10
    StructSpecifier  go to state 11
    DefList          go to state 36
    Def              go to state 37


state 25

    9 ExtDef: Specifier error ';' .

    $default  reduce using rule 9 (ExtDef)


state 26

   28 FunDec: ID error . ')'

    ')'  shift, and go to state 38


state 27

   25 FunDec: ID '(' . VarList ')'
   26       | ID '(' . error ')'
   27       | ID '(' . ')'

    error   shift, and go to state 39
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 4
    ')'     shift, and go to state 40

    Specifier        go to state 41
    TYPE             go to state 10
    StructSpecifier  go to state 11
    VarList          go to state 42
    ParamDec         go to state 43


state 28

    5 ExtDef: Specifier ExtDecList ';' .

    $default  reduce using rule 5 (ExtDef)


state 29

   23 VarDec: VarDec '[' . INT_NUM ']'
   24       | VarDec '[' . error ']'

    error    shift, and go to state 44
    INT_NUM  shift, and go to state 45


state 30

   12 ExtDecList: VarDec ',' . ExtDecList

    ID  shift, and go to state 46

    ExtDecList  go to state 47
    VarDec      go to state 22


state 31

   34 CompSt: error . '}'

    '}'  shift, and go to state 48


state 32

    7 ExtDef: Specifier FunDec ';' .

    $default  reduce using rule 7 (ExtDef)


state 33

   33 CompSt: '{' . DefList StmtList '}'

    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 4

    $default  reduce using rule 52 (DefList)

    Specifier        go to state 35
    TYPE             go to state 10
    StructSpecifier  go to state 11
    DefList          go to state 49
    Def              go to state 37


state 34

    8 ExtDef: Specifier FunDec CompSt .

    $default  reduce using rule 8 (ExtDef)


state 35

   54 Def: Specifier . DecList ';'
   55    | Specifier . error ';'

    error  shift, and go to state 50
    ID     shift, and go to state 46

    VarDec   go to state 51
    DecList  go to state 52
    Dec      go to state 53


state 36

   17 StructSpecifier: STRUCT OptTag '{' DefList . '}'

    '}'  shift, and go to state 54


state 37

   53 DefList: Def . DefList

    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 4

    $default  reduce using rule 52 (DefList)

    Specifier        go to state 35
    TYPE             go to state 10
    StructSpecifier  go to state 11
    DefList          go to state 55
    Def              go to state 37


state 38

   28 FunDec: ID error ')' .

    $default  reduce using rule 28 (FunDec)


state 39

   26 FunDec: ID '(' error . ')'
   31 VarList: error . ',' VarList

    ')'  shift, and go to state 56
    ','  shift, and go to state 57


state 40

   27 FunDec: ID '(' ')' .

    $default  reduce using rule 27 (FunDec)


state 41

   32 ParamDec: Specifier . VarDec

    ID  shift, and go to state 46

    VarDec  go to state 58


state 42

   25 FunDec: ID '(' VarList . ')'

    ')'  shift, and go to state 59


state 43

   29 VarList: ParamDec . ',' VarList
   30        | ParamDec .

    ','  shift, and go to state 60

    $default  reduce using rule 30 (VarList)


state 44

   24 VarDec: VarDec '[' error . ']'

    ']'  shift, and go to state 61


state 45

   23 VarDec: VarDec '[' INT_NUM . ']'

    ']'  shift, and go to state 62


state 46

   22 VarDec: ID .

    $default  reduce using rule 22 (VarDec)


state 47

   12 ExtDecList: VarDec ',' ExtDecList .

    $default  reduce using rule 12 (ExtDecList)


state 48

   34 CompSt: error '}' .

    $default  reduce using rule 34 (CompSt)


state 49

   33 CompSt: '{' DefList . StmtList '}'

    error      shift, and go to state 63
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    RETURN     shift, and go to state 67
    IF         shift, and go to state 68
    WHILE      shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 33

    '}'  reduce using rule 35 (StmtList)

    CompSt    go to state 73
    StmtList  go to state 74
    Stmt      go to state 75
    Exp       go to state 76


state 50

   55 Def: Specifier error . ';'
   58 DecList: error . ',' DecList
   61 Dec: error . '=' Exp

    '='  shift, and go to state 77
    ','  shift, and go to state 78
    ';'  shift, and go to state 79


state 51

   23 VarDec: VarDec . '[' INT_NUM ']'
   24       | VarDec . '[' error ']'
   59 Dec: VarDec .
   60    | VarDec . '=' Exp

    '='  shift, and go to state 80
    '['  shift, and go to state 29

    $default  reduce using rule 59 (Dec)


state 52

   54 Def: Specifier DecList . ';'

    ';'  shift, and go to state 81


state 53

   56 DecList: Dec .
   57        | Dec . ',' DecList

    ','  shift, and go to state 82

    $default  reduce using rule 56 (DecList)


state 54

   17 StructSpecifier: STRUCT OptTag '{' DefList '}' .

    $default  reduce using rule 17 (StructSpecifier)


state 55

   53 DefList: Def DefList .

    $default  reduce using rule 53 (DefList)


state 56

   26 FunDec: ID '(' error ')' .

    $default  reduce using rule 26 (FunDec)


state 57

   31 VarList: error ',' . VarList

    error   shift, and go to state 83
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 4

    Specifier        go to state 41
    TYPE             go to state 10
    StructSpecifier  go to state 11
    VarList          go to state 84
    ParamDec         go to state 43


state 58

   23 VarDec: VarDec . '[' INT_NUM ']'
   24       | VarDec . '[' error ']'
   32 ParamDec: Specifier VarDec .

    '['  shift, and go to state 29

    $default  reduce using rule 32 (ParamDec)


state 59

   25 FunDec: ID '(' VarList ')' .

    $default  reduce using rule 25 (FunDec)


state 60

   29 VarList: ParamDec ',' . VarList

    error   shift, and go to state 83
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    STRUCT  shift, and go to state 4

    Specifier        go to state 41
    TYPE             go to state 10
    StructSpecifier  go to state 11
    VarList          go to state 85
    ParamDec         go to state 43


state 61

   24 VarDec: VarDec '[' error ']' .

    $default  reduce using rule 24 (VarDec)


state 62

   23 VarDec: VarDec '[' INT_NUM ']' .

    $default  reduce using rule 23 (VarDec)


state 63

   34 CompSt: error . '}'
   38 Stmt: error . ';'
   71 Exp: error . ')'

    ')'  shift, and go to state 86
    ';'  shift, and go to state 87
    '}'  shift, and go to state 48


state 64

   81 Exp: INT_NUM .

    $default  reduce using rule 81 (Exp)


state 65

   82 Exp: FLOAT_NUM .

    $default  reduce using rule 82 (Exp)


state 66

   74 Exp: ID . '(' Args ')'
   75    | ID . '(' ')'
   76    | ID . error ')'
   80    | ID .

    error  shift, and go to state 88
    '('    shift, and go to state 89

    GE       reduce using rule 80 (Exp)
    LE       reduce using rule 80 (Exp)
    Equal    reduce using rule 80 (Exp)
    Unequal  reduce using rule 80 (Exp)
    And      reduce using rule 80 (Exp)
    Or       reduce using rule 80 (Exp)
    '='      reduce using rule 80 (Exp)
    '>'      reduce using rule 80 (Exp)
    '<'      reduce using rule 80 (Exp)
    '+'      reduce using rule 80 (Exp)
    '-'      reduce using rule 80 (Exp)
    '*'      reduce using rule 80 (Exp)
    '/'      reduce using rule 80 (Exp)
    ')'      reduce using rule 80 (Exp)
    '['      reduce using rule 80 (Exp)
    ']'      reduce using rule 80 (Exp)
    '.'      reduce using rule 80 (Exp)
    ','      reduce using rule 80 (Exp)
    ';'      reduce using rule 80 (Exp)


state 67

   40 Stmt: RETURN . Exp ';'
   41     | RETURN . error ';'

    error      shift, and go to state 90
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp  go to state 91


state 68

   42 Stmt: IF . '(' Exp ')' Stmt
   43     | IF . '(' error ')' Stmt
   44     | IF . error ')' Stmt
   45     | IF . '(' Exp ')' Stmt ELSE Stmt
   46     | IF . '(' Exp ')' error ELSE Stmt
   47     | IF . '(' error ')' Stmt ELSE Stmt
   48     | IF . error ')' Stmt ELSE Stmt

    error  shift, and go to state 92
    '('    shift, and go to state 93


state 69

   49 Stmt: WHILE . '(' Exp ')' Stmt
   50     | WHILE . '(' error ')' Stmt
   51     | WHILE . error ')' Stmt

    error  shift, and go to state 94
    '('    shift, and go to state 95


state 70

   72 Exp: '-' . Exp

    error      shift, and go to state 96
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp  go to state 97


state 71

   73 Exp: '!' . Exp

    error      shift, and go to state 96
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp  go to state 98


state 72

   70 Exp: '(' . Exp ')'

    error      shift, and go to state 96
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp  go to state 99


state 73

   39 Stmt: CompSt .

    $default  reduce using rule 39 (Stmt)


state 74

   33 CompSt: '{' DefList StmtList . '}'

    '}'  shift, and go to state 100


state 75

   36 StmtList: Stmt . StmtList

    error      shift, and go to state 63
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    RETURN     shift, and go to state 67
    IF         shift, and go to state 68
    WHILE      shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 33

    '}'  reduce using rule 35 (StmtList)

    CompSt    go to state 73
    StmtList  go to state 101
    Stmt      go to state 75
    Exp       go to state 76


state 76

   37 Stmt: Exp . ';'
   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    GE       shift, and go to state 102
    LE       shift, and go to state 103
    Equal    shift, and go to state 104
    Unequal  shift, and go to state 105
    And      shift, and go to state 106
    Or       shift, and go to state 107
    '='      shift, and go to state 108
    '>'      shift, and go to state 109
    '<'      shift, and go to state 110
    '+'      shift, and go to state 111
    '-'      shift, and go to state 112
    '*'      shift, and go to state 113
    '/'      shift, and go to state 114
    '['      shift, and go to state 115
    '.'      shift, and go to state 116
    ';'      shift, and go to state 117

    Relop  go to state 118


state 77

   61 Dec: error '=' . Exp

    error      shift, and go to state 96
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp  go to state 119


state 78

   58 DecList: error ',' . DecList

    error  shift, and go to state 120
    ID     shift, and go to state 46

    VarDec   go to state 51
    DecList  go to state 121
    Dec      go to state 53


state 79

   55 Def: Specifier error ';' .

    $default  reduce using rule 55 (Def)


state 80

   60 Dec: VarDec '=' . Exp

    error      shift, and go to state 96
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp  go to state 122


state 81

   54 Def: Specifier DecList ';' .

    $default  reduce using rule 54 (Def)


state 82

   57 DecList: Dec ',' . DecList

    error  shift, and go to state 120
    ID     shift, and go to state 46

    VarDec   go to state 51
    DecList  go to state 123
    Dec      go to state 53


state 83

   31 VarList: error . ',' VarList

    ','  shift, and go to state 57


state 84

   31 VarList: error ',' VarList .

    $default  reduce using rule 31 (VarList)


state 85

   29 VarList: ParamDec ',' VarList .

    $default  reduce using rule 29 (VarList)


state 86

   71 Exp: error ')' .

    $default  reduce using rule 71 (Exp)


state 87

   38 Stmt: error ';' .

    $default  reduce using rule 38 (Stmt)


state 88

   76 Exp: ID error . ')'

    ')'  shift, and go to state 124


state 89

   74 Exp: ID '(' . Args ')'
   75    | ID '(' . ')'

    error      shift, and go to state 125
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72
    ')'        shift, and go to state 126

    Exp   go to state 127
    Args  go to state 128


state 90

   41 Stmt: RETURN error . ';'
   71 Exp: error . ')'

    ')'  shift, and go to state 86
    ';'  shift, and go to state 129


state 91

   40 Stmt: RETURN Exp . ';'
   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    GE       shift, and go to state 102
    LE       shift, and go to state 103
    Equal    shift, and go to state 104
    Unequal  shift, and go to state 105
    And      shift, and go to state 106
    Or       shift, and go to state 107
    '='      shift, and go to state 108
    '>'      shift, and go to state 109
    '<'      shift, and go to state 110
    '+'      shift, and go to state 111
    '-'      shift, and go to state 112
    '*'      shift, and go to state 113
    '/'      shift, and go to state 114
    '['      shift, and go to state 115
    '.'      shift, and go to state 116
    ';'      shift, and go to state 130

    Relop  go to state 118


state 92

   44 Stmt: IF error . ')' Stmt
   48     | IF error . ')' Stmt ELSE Stmt

    ')'  shift, and go to state 131


state 93

   42 Stmt: IF '(' . Exp ')' Stmt
   43     | IF '(' . error ')' Stmt
   45     | IF '(' . Exp ')' Stmt ELSE Stmt
   46     | IF '(' . Exp ')' error ELSE Stmt
   47     | IF '(' . error ')' Stmt ELSE Stmt

    error      shift, and go to state 132
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp  go to state 133


state 94

   51 Stmt: WHILE error . ')' Stmt

    ')'  shift, and go to state 134


state 95

   49 Stmt: WHILE '(' . Exp ')' Stmt
   50     | WHILE '(' . error ')' Stmt

    error      shift, and go to state 135
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp  go to state 136


state 96

   71 Exp: error . ')'

    ')'  shift, and go to state 86


state 97

   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   72    | '-' Exp .
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    '['  shift, and go to state 115
    '.'  shift, and go to state 116

    $default  reduce using rule 72 (Exp)

    Relop  go to state 118


state 98

   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   73    | '!' Exp .
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    '['  shift, and go to state 115
    '.'  shift, and go to state 116

    $default  reduce using rule 73 (Exp)

    Relop  go to state 118


state 99

   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   70    | '(' Exp . ')'
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    GE       shift, and go to state 102
    LE       shift, and go to state 103
    Equal    shift, and go to state 104
    Unequal  shift, and go to state 105
    And      shift, and go to state 106
    Or       shift, and go to state 107
    '='      shift, and go to state 108
    '>'      shift, and go to state 109
    '<'      shift, and go to state 110
    '+'      shift, and go to state 111
    '-'      shift, and go to state 112
    '*'      shift, and go to state 113
    '/'      shift, and go to state 114
    ')'      shift, and go to state 137
    '['      shift, and go to state 115
    '.'      shift, and go to state 116

    Relop  go to state 118


state 100

   33 CompSt: '{' DefList StmtList '}' .

    $default  reduce using rule 33 (CompSt)


state 101

   36 StmtList: Stmt StmtList .

    $default  reduce using rule 36 (StmtList)


state 102

   88 Relop: GE .

    $default  reduce using rule 88 (Relop)


state 103

   86 Relop: LE .

    $default  reduce using rule 86 (Relop)


state 104

   83 Relop: Equal .

    $default  reduce using rule 83 (Relop)


state 105

   84 Relop: Unequal .

    $default  reduce using rule 84 (Relop)


state 106

   63 Exp: Exp And . Exp

    error      shift, and go to state 96
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp  go to state 138


state 107

   64 Exp: Exp Or . Exp

    error      shift, and go to state 96
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp  go to state 139


state 108

   62 Exp: Exp '=' . Exp

    error      shift, and go to state 96
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp  go to state 140


state 109

   87 Relop: '>' .

    $default  reduce using rule 87 (Relop)


state 110

   85 Relop: '<' .

    $default  reduce using rule 85 (Relop)


state 111

   66 Exp: Exp '+' . Exp

    error      shift, and go to state 96
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp  go to state 141


state 112

   67 Exp: Exp '-' . Exp

    error      shift, and go to state 96
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp  go to state 142


state 113

   68 Exp: Exp '*' . Exp

    error      shift, and go to state 96
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp  go to state 143


state 114

   69 Exp: Exp '/' . Exp

    error      shift, and go to state 96
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp  go to state 144


state 115

   77 Exp: Exp '[' . Exp ']'
   78    | Exp '[' . error

    error      shift, and go to state 145
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp  go to state 146


state 116

   79 Exp: Exp '.' . ID

    ID  shift, and go to state 147


state 117

   37 Stmt: Exp ';' .

    $default  reduce using rule 37 (Stmt)


state 118

   65 Exp: Exp Relop . Exp

    error      shift, and go to state 96
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp  go to state 148


state 119

   61 Dec: error '=' Exp .
   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    GE       shift, and go to state 102
    LE       shift, and go to state 103
    Equal    shift, and go to state 104
    Unequal  shift, and go to state 105
    And      shift, and go to state 106
    Or       shift, and go to state 107
    '='      shift, and go to state 108
    '>'      shift, and go to state 109
    '<'      shift, and go to state 110
    '+'      shift, and go to state 111
    '-'      shift, and go to state 112
    '*'      shift, and go to state 113
    '/'      shift, and go to state 114
    '['      shift, and go to state 115
    '.'      shift, and go to state 116

    $default  reduce using rule 61 (Dec)

    Relop  go to state 118


state 120

   58 DecList: error . ',' DecList
   61 Dec: error . '=' Exp

    '='  shift, and go to state 77
    ','  shift, and go to state 78


state 121

   58 DecList: error ',' DecList .

    $default  reduce using rule 58 (DecList)


state 122

   60 Dec: VarDec '=' Exp .
   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    GE       shift, and go to state 102
    LE       shift, and go to state 103
    Equal    shift, and go to state 104
    Unequal  shift, and go to state 105
    And      shift, and go to state 106
    Or       shift, and go to state 107
    '='      shift, and go to state 108
    '>'      shift, and go to state 109
    '<'      shift, and go to state 110
    '+'      shift, and go to state 111
    '-'      shift, and go to state 112
    '*'      shift, and go to state 113
    '/'      shift, and go to state 114
    '['      shift, and go to state 115
    '.'      shift, and go to state 116

    $default  reduce using rule 60 (Dec)

    Relop  go to state 118


state 123

   57 DecList: Dec ',' DecList .

    $default  reduce using rule 57 (DecList)


state 124

   76 Exp: ID error ')' .

    $default  reduce using rule 76 (Exp)


state 125

   71 Exp: error . ')'
   90 Args: error . ',' Args

    ')'  shift, and go to state 86
    ','  shift, and go to state 149


state 126

   75 Exp: ID '(' ')' .

    $default  reduce using rule 75 (Exp)


state 127

   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID
   89 Args: Exp . ',' Args
   91     | Exp .

    GE       shift, and go to state 102
    LE       shift, and go to state 103
    Equal    shift, and go to state 104
    Unequal  shift, and go to state 105
    And      shift, and go to state 106
    Or       shift, and go to state 107
    '='      shift, and go to state 108
    '>'      shift, and go to state 109
    '<'      shift, and go to state 110
    '+'      shift, and go to state 111
    '-'      shift, and go to state 112
    '*'      shift, and go to state 113
    '/'      shift, and go to state 114
    '['      shift, and go to state 115
    '.'      shift, and go to state 116
    ','      shift, and go to state 150

    $default  reduce using rule 91 (Args)

    Relop  go to state 118


state 128

   74 Exp: ID '(' Args . ')'

    ')'  shift, and go to state 151


state 129

   41 Stmt: RETURN error ';' .

    $default  reduce using rule 41 (Stmt)


state 130

   40 Stmt: RETURN Exp ';' .

    $default  reduce using rule 40 (Stmt)


state 131

   44 Stmt: IF error ')' . Stmt
   48     | IF error ')' . Stmt ELSE Stmt

    error      shift, and go to state 63
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    RETURN     shift, and go to state 67
    IF         shift, and go to state 68
    WHILE      shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 33

    CompSt  go to state 73
    Stmt    go to state 152
    Exp     go to state 76


state 132

   43 Stmt: IF '(' error . ')' Stmt
   47     | IF '(' error . ')' Stmt ELSE Stmt
   71 Exp: error . ')'

    ')'  shift, and go to state 153


state 133

   42 Stmt: IF '(' Exp . ')' Stmt
   45     | IF '(' Exp . ')' Stmt ELSE Stmt
   46     | IF '(' Exp . ')' error ELSE Stmt
   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    GE       shift, and go to state 102
    LE       shift, and go to state 103
    Equal    shift, and go to state 104
    Unequal  shift, and go to state 105
    And      shift, and go to state 106
    Or       shift, and go to state 107
    '='      shift, and go to state 108
    '>'      shift, and go to state 109
    '<'      shift, and go to state 110
    '+'      shift, and go to state 111
    '-'      shift, and go to state 112
    '*'      shift, and go to state 113
    '/'      shift, and go to state 114
    ')'      shift, and go to state 154
    '['      shift, and go to state 115
    '.'      shift, and go to state 116

    Relop  go to state 118


state 134

   51 Stmt: WHILE error ')' . Stmt

    error      shift, and go to state 63
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    RETURN     shift, and go to state 67
    IF         shift, and go to state 68
    WHILE      shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 33

    CompSt  go to state 73
    Stmt    go to state 155
    Exp     go to state 76


state 135

   50 Stmt: WHILE '(' error . ')' Stmt
   71 Exp: error . ')'

    ')'  shift, and go to state 156


state 136

   49 Stmt: WHILE '(' Exp . ')' Stmt
   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    GE       shift, and go to state 102
    LE       shift, and go to state 103
    Equal    shift, and go to state 104
    Unequal  shift, and go to state 105
    And      shift, and go to state 106
    Or       shift, and go to state 107
    '='      shift, and go to state 108
    '>'      shift, and go to state 109
    '<'      shift, and go to state 110
    '+'      shift, and go to state 111
    '-'      shift, and go to state 112
    '*'      shift, and go to state 113
    '/'      shift, and go to state 114
    ')'      shift, and go to state 157
    '['      shift, and go to state 115
    '.'      shift, and go to state 116

    Relop  go to state 118


state 137

   70 Exp: '(' Exp ')' .

    $default  reduce using rule 70 (Exp)


state 138

   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   63    | Exp And Exp .
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    GE       shift, and go to state 102
    LE       shift, and go to state 103
    Equal    shift, and go to state 104
    Unequal  shift, and go to state 105
    '>'      shift, and go to state 109
    '<'      shift, and go to state 110
    '+'      shift, and go to state 111
    '-'      shift, and go to state 112
    '*'      shift, and go to state 113
    '/'      shift, and go to state 114
    '['      shift, and go to state 115
    '.'      shift, and go to state 116

    $default  reduce using rule 63 (Exp)

    Relop  go to state 118


state 139

   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   64    | Exp . Or Exp
   64    | Exp Or Exp .
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    GE       shift, and go to state 102
    LE       shift, and go to state 103
    Equal    shift, and go to state 104
    Unequal  shift, and go to state 105
    And      shift, and go to state 106
    '>'      shift, and go to state 109
    '<'      shift, and go to state 110
    '+'      shift, and go to state 111
    '-'      shift, and go to state 112
    '*'      shift, and go to state 113
    '/'      shift, and go to state 114
    '['      shift, and go to state 115
    '.'      shift, and go to state 116

    $default  reduce using rule 64 (Exp)

    Relop  go to state 118


state 140

   62 Exp: Exp . '=' Exp
   62    | Exp '=' Exp .
   63    | Exp . And Exp
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    GE       shift, and go to state 102
    LE       shift, and go to state 103
    Equal    shift, and go to state 104
    Unequal  shift, and go to state 105
    And      shift, and go to state 106
    Or       shift, and go to state 107
    '='      shift, and go to state 108
    '>'      shift, and go to state 109
    '<'      shift, and go to state 110
    '+'      shift, and go to state 111
    '-'      shift, and go to state 112
    '*'      shift, and go to state 113
    '/'      shift, and go to state 114
    '['      shift, and go to state 115
    '.'      shift, and go to state 116

    $default  reduce using rule 62 (Exp)

    Relop  go to state 118


state 141

   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   66    | Exp '+' Exp .
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '['  shift, and go to state 115
    '.'  shift, and go to state 116

    $default  reduce using rule 66 (Exp)

    Relop  go to state 118


state 142

   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   67    | Exp '-' Exp .
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    '*'  shift, and go to state 113
    '/'  shift, and go to state 114
    '['  shift, and go to state 115
    '.'  shift, and go to state 116

    $default  reduce using rule 67 (Exp)

    Relop  go to state 118


state 143

   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   68    | Exp '*' Exp .
   69    | Exp . '/' Exp
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    '['  shift, and go to state 115
    '.'  shift, and go to state 116

    $default  reduce using rule 68 (Exp)

    Relop  go to state 118


state 144

   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   69    | Exp '/' Exp .
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    '['  shift, and go to state 115
    '.'  shift, and go to state 116

    $default  reduce using rule 69 (Exp)

    Relop  go to state 118


state 145

   71 Exp: error . ')'
   78    | Exp '[' error .

    ')'  shift, and go to state 86

    ')'       [reduce using rule 78 (Exp)]
    $default  reduce using rule 78 (Exp)


state 146

   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   77    | Exp . '[' Exp ']'
   77    | Exp '[' Exp . ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    GE       shift, and go to state 102
    LE       shift, and go to state 103
    Equal    shift, and go to state 104
    Unequal  shift, and go to state 105
    And      shift, and go to state 106
    Or       shift, and go to state 107
    '='      shift, and go to state 108
    '>'      shift, and go to state 109
    '<'      shift, and go to state 110
    '+'      shift, and go to state 111
    '-'      shift, and go to state 112
    '*'      shift, and go to state 113
    '/'      shift, and go to state 114
    '['      shift, and go to state 115
    ']'      shift, and go to state 158
    '.'      shift, and go to state 116

    Relop  go to state 118


state 147

   79 Exp: Exp '.' ID .

    $default  reduce using rule 79 (Exp)


state 148

   62 Exp: Exp . '=' Exp
   63    | Exp . And Exp
   64    | Exp . Or Exp
   65    | Exp . Relop Exp
   65    | Exp Relop Exp .
   66    | Exp . '+' Exp
   67    | Exp . '-' Exp
   68    | Exp . '*' Exp
   69    | Exp . '/' Exp
   77    | Exp . '[' Exp ']'
   78    | Exp . '[' error
   79    | Exp . '.' ID

    GE       shift, and go to state 102
    LE       shift, and go to state 103
    Equal    shift, and go to state 104
    Unequal  shift, and go to state 105
    And      shift, and go to state 106
    Or       shift, and go to state 107
    '='      shift, and go to state 108
    '>'      shift, and go to state 109
    '<'      shift, and go to state 110
    '+'      shift, and go to state 111
    '-'      shift, and go to state 112
    '*'      shift, and go to state 113
    '/'      shift, and go to state 114
    '['      shift, and go to state 115
    '.'      shift, and go to state 116

    GE        [reduce using rule 65 (Exp)]
    LE        [reduce using rule 65 (Exp)]
    Equal     [reduce using rule 65 (Exp)]
    Unequal   [reduce using rule 65 (Exp)]
    And       [reduce using rule 65 (Exp)]
    Or        [reduce using rule 65 (Exp)]
    '='       [reduce using rule 65 (Exp)]
    '>'       [reduce using rule 65 (Exp)]
    '<'       [reduce using rule 65 (Exp)]
    '+'       [reduce using rule 65 (Exp)]
    '-'       [reduce using rule 65 (Exp)]
    '*'       [reduce using rule 65 (Exp)]
    '/'       [reduce using rule 65 (Exp)]
    '['       [reduce using rule 65 (Exp)]
    '.'       [reduce using rule 65 (Exp)]
    $default  reduce using rule 65 (Exp)

    Relop  go to state 118


state 149

   90 Args: error ',' . Args

    error      shift, and go to state 125
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp   go to state 127
    Args  go to state 159


state 150

   89 Args: Exp ',' . Args

    error      shift, and go to state 125
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72

    Exp   go to state 127
    Args  go to state 160


state 151

   74 Exp: ID '(' Args ')' .

    $default  reduce using rule 74 (Exp)


state 152

   44 Stmt: IF error ')' Stmt .
   48     | IF error ')' Stmt . ELSE Stmt

    ELSE  shift, and go to state 161

    $default  reduce using rule 44 (Stmt)


state 153

   43 Stmt: IF '(' error ')' . Stmt
   47     | IF '(' error ')' . Stmt ELSE Stmt
   71 Exp: error ')' .

    error      shift, and go to state 63
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    RETURN     shift, and go to state 67
    IF         shift, and go to state 68
    WHILE      shift, and go to state 69
    '!'        shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 33

    GE       reduce using rule 71 (Exp)
    LE       reduce using rule 71 (Exp)
    Equal    reduce using rule 71 (Exp)
    Unequal  reduce using rule 71 (Exp)
    And      reduce using rule 71 (Exp)
    Or       reduce using rule 71 (Exp)
    '='      reduce using rule 71 (Exp)
    '>'      reduce using rule 71 (Exp)
    '<'      reduce using rule 71 (Exp)
    '+'      reduce using rule 71 (Exp)
    '-'      reduce using rule 71 (Exp)
    '*'      reduce using rule 71 (Exp)
    '/'      reduce using rule 71 (Exp)
    ')'      reduce using rule 71 (Exp)
    '['      reduce using rule 71 (Exp)
    '.'      reduce using rule 71 (Exp)

    CompSt  go to state 73
    Stmt    go to state 162
    Exp     go to state 76


state 154

   42 Stmt: IF '(' Exp ')' . Stmt
   45     | IF '(' Exp ')' . Stmt ELSE Stmt
   46     | IF '(' Exp ')' . error ELSE Stmt

    error      shift, and go to state 163
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    RETURN     shift, and go to state 67
    IF         shift, and go to state 68
    WHILE      shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 33

    CompSt  go to state 73
    Stmt    go to state 164
    Exp     go to state 76


state 155

   51 Stmt: WHILE error ')' Stmt .

    $default  reduce using rule 51 (Stmt)


state 156

   50 Stmt: WHILE '(' error ')' . Stmt
   71 Exp: error ')' .

    error      shift, and go to state 63
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    RETURN     shift, and go to state 67
    IF         shift, and go to state 68
    WHILE      shift, and go to state 69
    '!'        shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 33

    GE       reduce using rule 71 (Exp)
    LE       reduce using rule 71 (Exp)
    Equal    reduce using rule 71 (Exp)
    Unequal  reduce using rule 71 (Exp)
    And      reduce using rule 71 (Exp)
    Or       reduce using rule 71 (Exp)
    '='      reduce using rule 71 (Exp)
    '>'      reduce using rule 71 (Exp)
    '<'      reduce using rule 71 (Exp)
    '+'      reduce using rule 71 (Exp)
    '-'      reduce using rule 71 (Exp)
    '*'      reduce using rule 71 (Exp)
    '/'      reduce using rule 71 (Exp)
    ')'      reduce using rule 71 (Exp)
    '['      reduce using rule 71 (Exp)
    '.'      reduce using rule 71 (Exp)

    CompSt  go to state 73
    Stmt    go to state 165
    Exp     go to state 76


state 157

   49 Stmt: WHILE '(' Exp ')' . Stmt

    error      shift, and go to state 63
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    RETURN     shift, and go to state 67
    IF         shift, and go to state 68
    WHILE      shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 33

    CompSt  go to state 73
    Stmt    go to state 166
    Exp     go to state 76


state 158

   77 Exp: Exp '[' Exp ']' .

    $default  reduce using rule 77 (Exp)


state 159

   90 Args: error ',' Args .

    $default  reduce using rule 90 (Args)


state 160

   89 Args: Exp ',' Args .

    $default  reduce using rule 89 (Args)


state 161

   48 Stmt: IF error ')' Stmt ELSE . Stmt

    error      shift, and go to state 63
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    RETURN     shift, and go to state 67
    IF         shift, and go to state 68
    WHILE      shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 33

    CompSt  go to state 73
    Stmt    go to state 167
    Exp     go to state 76


state 162

   43 Stmt: IF '(' error ')' Stmt .
   47     | IF '(' error ')' Stmt . ELSE Stmt

    ELSE  shift, and go to state 168

    $default  reduce using rule 43 (Stmt)


state 163

   34 CompSt: error . '}'
   38 Stmt: error . ';'
   46     | IF '(' Exp ')' error . ELSE Stmt
   71 Exp: error . ')'

    ELSE  shift, and go to state 169
    ')'   shift, and go to state 86
    ';'   shift, and go to state 87
    '}'   shift, and go to state 48


state 164

   42 Stmt: IF '(' Exp ')' Stmt .
   45     | IF '(' Exp ')' Stmt . ELSE Stmt

    ELSE  shift, and go to state 170

    $default  reduce using rule 42 (Stmt)


state 165

   50 Stmt: WHILE '(' error ')' Stmt .

    $default  reduce using rule 50 (Stmt)


state 166

   49 Stmt: WHILE '(' Exp ')' Stmt .

    $default  reduce using rule 49 (Stmt)


state 167

   48 Stmt: IF error ')' Stmt ELSE Stmt .

    $default  reduce using rule 48 (Stmt)


state 168

   47 Stmt: IF '(' error ')' Stmt ELSE . Stmt

    error      shift, and go to state 63
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    RETURN     shift, and go to state 67
    IF         shift, and go to state 68
    WHILE      shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 33

    CompSt  go to state 73
    Stmt    go to state 171
    Exp     go to state 76


state 169

   46 Stmt: IF '(' Exp ')' error ELSE . Stmt

    error      shift, and go to state 63
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    RETURN     shift, and go to state 67
    IF         shift, and go to state 68
    WHILE      shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 33

    CompSt  go to state 73
    Stmt    go to state 172
    Exp     go to state 76


state 170

   45 Stmt: IF '(' Exp ')' Stmt ELSE . Stmt

    error      shift, and go to state 63
    INT_NUM    shift, and go to state 64
    FLOAT_NUM  shift, and go to state 65
    ID         shift, and go to state 66
    RETURN     shift, and go to state 67
    IF         shift, and go to state 68
    WHILE      shift, and go to state 69
    '-'        shift, and go to state 70
    '!'        shift, and go to state 71
    '('        shift, and go to state 72
    '{'        shift, and go to state 33

    CompSt  go to state 73
    Stmt    go to state 173
    Exp     go to state 76


state 171

   47 Stmt: IF '(' error ')' Stmt ELSE Stmt .

    $default  reduce using rule 47 (Stmt)


state 172

   46 Stmt: IF '(' Exp ')' error ELSE Stmt .

    $default  reduce using rule 46 (Stmt)


state 173

   45 Stmt: IF '(' Exp ')' Stmt ELSE Stmt .

    $default  reduce using rule 45 (Stmt)
